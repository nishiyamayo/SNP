buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE'
    }
}

configure(applicationProjects()) {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'scala'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    [compileJava, compileTestJava]*.options.each {
        it.encoding = 'UTF-8'
        it.compilerArgs = ['-Xlint:all,-serial,-processing']
    }

    sourceSets {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }

    idea.module.scopes.PROVIDED.plus += [configurations.provided]

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    configurations {
        provided
    }

dependencies {
    compile 'joda-time:joda-time:2.9.2',
            'org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE',
            'org.scala-lang:scala-library:2.11.7',
            'com.fasterxml.jackson.core:jackson-databind:2.7.0',
            'com.google.openrtb:openrtb-core:1.0.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.setUseAnt(false)
}


    idea.module.scopes.PROVIDED.plus += [configurations.provided]

    dependencies {
        compile 'org.threeten:threetenbp:1.3.1',
                'org.scala-lang:scala-library:2.11.7'
        testCompile('junit:junit:4.+') {
            exclude group: 'org.hamcrest'
        }
        testCompile('org.mockito:mockito-core:1.+') {
            exclude group: 'org.hamcrest'
        }
        testCompile 'org.assertj:assertj-core:3.1.0'
    }

    bootRun {
        systemProperty "user.timezone", "UTC"

        if (project.hasProperty('args')) {
            args project.args.split('\\s+')
        }
    }
}

def applicationProjects() {
    subprojects -
            project('ssp-web') -
            project('ssp-web-admin') -
            project('bid-generator') -
            project('ssp-io')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
